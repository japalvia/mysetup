Git less commonly needed tricks
===============================

Search for a file in all branches:
git log --all -- '**/some_file'

View file from another local branch without switching to it:
git show <branch>:<file path>

Grep in a specific branch:
git grep <regexp> branch

Prune remote branches that were removed by someone else/other clone:
git remote prune origin

Forking upstream and following it
---------------------------------

git remote add upstream https://github.com/user/repo.git
git fetch upstream
git checkout -b upstream_master --track upstream/master


Rewrite incorrect email/user in commit history:
-----------------------------------------------

git checkout -b fix_author
git filter-branch -f --env-filter \
    'export GIT_AUTHOR_EMAIL="address" ; export GIT_AUTHOR_NAME="name"'
git checkout master
git rebase fix_author
# WARNING: force push will break remote for everyone else
git push -f origin master

Make a quick backup of local branch before rebasing
---------------------------------------------------

git fetch . somebranch:somebranch-bak


Ignore a file that has only local changes
-----------------------------------------

Example: your local build requires a minor modification to a script/tool
that should not be pushed to remote but always needed to build.

git update-index --assume-unchanged <file>
git update-index --skip-worktree <file>

Resume tracking by:
git update-index --no-skip-worktree

List untracked files: TODO

TODO: is this better or worse than using git ignore?
