Arch Linux howtos
=================

Pacman
------

Multilib:
Find 32-bit packages:
pacman -Sl multilib |grep libstdc++
pacman -S lib32-libstdc++5

Show 'Required by' aka reverse dependencies for a package:
pacman -Sii package

List packages explicitly installed by me (excluding initial base installation):
TODO: base is not group any more, it's meta package
pacman -Qei | awk '/^Name/ { name=$3 } /^Groups/ { if ( $3 != "base" && $3 != "base-devel" ) { print name } }'

Query package which provides specified filename:
pacman -Qo

Remove orphaned packages (dependencies not required anymore):
pacman -Rns $(pacman -Qtdq)

Remove package and dependencies that are not needed after the removal:
pacman -Rs

Remove package and cascade removal down the dependers:
pacman -Rsc

Mark package to be installed as dependency in the local database:
pacman -D --asdeps

Show dependencies in a tree structure:
pactree <package>

Show reverse dependencies in a tree structure:
pactree -r <package>

Show query results only for native Arch packages:
pacman -Qn
Show query results only for foreign (AUR/local builds) packages:
pacman -Qm

Sync signing keys: pacman-key --refresh-keys

Synchronize database when a download fails, optionally also install a package:
pacman -Sy [package]

Find package that provides a file:
pacman -F [file]

Find all 32bit multilib packages:
yay  -Ss | grep multilib | grep Installed | cut -d" " -f1 | cut -d"/" -f2
Then remove them one by one using "pacman -Rsc"

Package logs
------------

See the "apt changelog" equivalent information for arch packages:
pacolog -l 3 sudo


Downgrade
---------

Arch packages:
install 'downgrade' and run:
$ sudo downgrade <package>

AUR:
Downgrade from cache:
$ yay -U ~/.cache/yay/icaclient/icaclient-20.09-1-x86_64.pkg.tar.zst
$ downgrade --pacman-cache .cache/yay/clio clion

Otherwise, it should be possible to clone the package repo from
https://aur.archlinux.org/packages
and checkout appropriate version for building using makepkg.

Testing
-------

Using testing repositories:
https://joshtronic.com/2019/08/19/how-to-install-packages-from-testing-on-arch-linux/

Uncomment section in /etc/pacman.conf
pacman -Sy
pacman -S community-testing/

Disable testing:
Revert changes in /etc/pacman.conf
"rollback" your updates from these repositories:
pacman -Syuu


AUR
---

Upgrade AUR packages only. If there are any missing package reported, they must
be first handled before the upgrade can proceed:
aurman -S --aur -u
yaourt -S -a -u

Import missing GPG key:
gpg --recv-keys <id>

Parallel complication:
MAKEFLAGS="-j$(nproc)" yay -S

AUR: yay
--------

Setup:
$ git clone https://aur.archlinux.org/yay.git
$ cd yay
$ makepkg -si

Usage: command line interface is the same as pacman. Yay commands apply to all
packages, not just AUR.

yay: error while loading shared libraries
Newer version of yay must be installed after a system update.
Remove the current:
$ sudo pacman -R yay
$ cd yay
$ git pull origin master
$ makepkg -si

Systemd services
----------------

journalctl becomes slow; vacuum and restrict size of stored logs:
# journalctl --vacuum-size=128M
$ grep SystemMaxUse /etc/systemd/journald.conf
SystemMaxUse=128M

Add your own services to location: /etc/systemd/system/
Reload systemd to read the new service: systemctl daemon-reload

journalctl
----------

Jump to end of journal when opening:
journalctl -e

coredumpctl
-----------

Install package systemd-coredump
Core dumps are now recorded to journalctl
Access the latest core dump in gdb:
# coredumpctl gdb

Managing network
----------------

netctl --help

Restart wifi: systemctl restart netctl@your_network

Configure wifi using wifi adapter
    Identify interface: ip addr
    Generate profile (service) to your AP: wifi-menu <interface>
    Reconfigure the primary network profile:
        netctl stop <old-profile>
        netctl disable <old-profile>
        netctl start <new-profile>
        netctl enable <new-profile>

devmon
------

# pacman -S udevil

Label your disks so they will use the label as mount point when automounted.
Disks must be unmounted.
ext2/3/4:   # e2label /dev/sdb9 lacie_o
xfs:        # xfs_admin -L lacie_data /dev/sdb2

Show labels:
# lsblk -o name,mountpoint,label,size,uuid


pip
---

Install packages as normal user:
pip install --user <package>

Audio
-----

Legacy application using OSS:
Install ossp
Run the command with 'padsp' wrapper


Temperatures
------------

Detect sensors once and write to /etc/..
# sensors-detect --auto

Print sensors info:
$ sensors
Output interpretation:
acpitz-acpi-0: almost always the CPU or CPU socket temperature

Print SSD info:
# smartctl --attributes /dev/nvme0

Suspend
-------

Disable wake-on-lan for the current boot:
sudo ethtool -s eno1 wol d
sudo ethtool eno1 | grep Wake-on
	Supports Wake-on: pumbg
	Wake-on: d

Name resolution
---------------

Generate /etc/resolv.conf:
resolvconf -u

netctl uses dhcpcd to handle dynamically configured interfaces
which in turn invokes resolvconf.

openresolv package is the default(?) resolvconf implementation.
systemd-resolved is alternative implementation. Most likely
these should not be running at the same time.

If /etc/resolv.conf stops being generated, look for stale nameservers:
$ grep -Ir "127.0.0.1" /run/resolvconf/
/run/resolvconf/interfaces/enp60s0u1u3:nameserver 127.0.0.1
--> removing the extra address and generating resolv.conf seems to help.

Kernel
------

Updating grub menu entries after installing new kernel version:
sudo grub-mkconfig -o /boot/grub/grub.cfg

Applications
------------

Enable Chromecast discovery in Chromium:
chrome://flags/#load-media-router-component-extension

System
------

Print performance BIAS setting:
sudo x86_energy_perf_policy

CPU frequency scaling:
cpupower frequency-info

Logind / power management
-------------------------

/etc/systemd/logind.conf

Reload config after editing:
kill -s HUP $(systemctl show --property MainPID systemd-logind | cut -d= -f2)

Default applications without DE
-------------------------------

Find MIME for file type:
$ xdg-mime query filetype "some_file.pdf"
application/pdf

Find current default app for this MIME:
$ xdg-mime query default application/pdf
chromium.desktop

Set new default for this MIME:
$ xdg-mime default mupdf application/pdf

Note: ranger is configured separately in rifle.conf

SysRq
-----

Check currently allowed operations:
cat /proc/sys/kernel/sysrq
sysctl kernel.sysrq

Enable all operations permanently:
sysctl kernel.sysrq=1

Maintain mirrorlist
-------------------

https://wiki.archlinux.org/index.php/reflector

sudo reflector --verbose --download-timeout 30 --country Finland,Sweden \
	--latest 5 --sort rate --save /etc/pacman.d/mirrorlist

Setup automatic mirror refresh:
Configure /etc/xdg/reflector/reflector.conf
systemctl enable --now reflector.timer

Watchdog
--------

https://wiki.archlinux.org/index.php/Improving_performance#Watchdogs
Add nowatchdog to GRUB_CMDLINE_LINUX_DEFAULT
grub-mkconfig -o /boot/grub/grub.cfg

pipewire
--------

systemctl --user disable --now pulseaudio.service
systemctl --user stop pulseaudio.socket

Install: use default dependency pipewire-media-session,
wireplumber might be feasible replacement in the future.
paru -S pipewire pipewire-pulse pipewire-alsa

Config: default configs from /usr/share should be sufficient, otherwise
copy to ~/.config/pipewire/pipewire.conf and see man pipewire.conf

# vendor preset is enabled
systemctl --user start pipewire-media-session
systemctl --user start pipewire
