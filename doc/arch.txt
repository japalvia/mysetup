Arch Linux howtos
=================

Pacman
------

Multilib:
Find 32-bit packages:
pacman -Sl multilib |grep libstdc++
pacman -S lib32-libstdc++5

Show 'Required by' for a package:
pacman -Sii package

List packages explicitly installed by me (excluding initial base installation):
pacman -Qei | awk '/^Name/ { name=$3 } /^Groups/ { if ( $3 != "base" && $3 != "base-devel" ) { print name } }'

Query package which provides specified filename:
pacman -Qo

Remove orphaned packages (dependencies not required anymore):
pacman -Rns $(pacman -Qtdq)

Remove package and dependencies that are not needed after the removal:
pacman -Rs

Remove package and cascade removal down the dependers:
pacman -Rsc

Sync signing keys: pacman-key --refresh-keys

Synchronize database when a download fails, optionally also install a package:
pacman -Sy [package]

Find package that provides a file:
pacman -Fs [file]

AUR
---

Upgrade AUR packages only. If there are any missing package reported, they must
be first handled before the upgrade can proceed:
aurman -S --aur -u
yaourt -S -a -u

Import missing GPG key:
gpg --recv-keys <id>

AUR: yay
--------

Setup:
$ git clone https://aur.archlinux.org/yay.git
$ cd yay
$ makepkg -si

Usage: command line interface is the same as pacman. Yay commands apply to all
packages, not just AUR.


Systemd services
----------------

journalctl becomes slow; vacuum and restrict size of stored logs:
# journalctl --vacuum-size=128M
$ grep SystemMaxUse /etc/systemd/journald.conf
SystemMaxUse=128M

Add your own services to location: /etc/systemd/system/
Reload systemd to read the new service: systemctl daemon-reload

journalctl
----------

Jump to end of journal when opening:
journalctl -e

coredumpctl
-----------

Install package systemd-coredump
Core dumps are now recorded to journalctl
Access the latest core dump in gdb:
# coredumpctl gdb

Managing network
----------------

netctl --help

Restart wifi: systemctl restart netctl@your_network

Configure wifi using wifi adapter
    Identify interface: ip addr
    Generate profile (service) to your AP: wifi-menu <interface>
    Reconfigure the primary network profile:
        netctl stop <old-profile>
        netctl disable <old-profile>
        netctl start <new-profile>
        netctl enable <new-profile>

devmon
------

# pacman -S udevil

Label your disks so they will use the label as mount point when automounted.
Disks must be unmounted.
ext2/3/4:   # e2label /dev/sdb9 lacie_o
xfs:        # xfs_admin -L lacie_data /dev/sdb2

Show labels:
# lsblk -o name,mountpoint,label,size,uuid


pip
---

Install packages as normal user:
pip install --user <package>

